output_prefix:
    "Output"

# set to True, with no quotes, if genomes are from eukarya, False, with no quotes if bacteria/archaea
is_euk:
    False

genomes_dir:
    "../genomes"

# extension the fasta files have (must not be gzipped; include the period preceding, e.g., ".fasta", ".fna", ".fa")
assembly_extension:
    ".fasta"

## number of threads or cpus (depending on how the program labeled them) to use per snakemake job (set with the -j parameter to the snakemake call)
    # passed to eukcc, CAT, checkm2, gtdb-tk
threads:
    20

## number of cpus used by pplacer by gtdb-tk
# pplacer can have issues with memory with multiple cpus; see e.g. https://ecogenomics.github.io/GTDBTk/faq.html#gtdb-tk-reaches-the-memory-limit-pplacer-crashes
gtdb_tk_pplacer_cpus:
    4

logs_dir:
    "logs/"

checkm2_output_dir:
    "checkm2-output/"

gtdbtk_output_dir:
    "gtdb-tk-output/"

## keep all files?
# set this to "YES" (all caps needed) if wanting to keep all produced files by all programs, anything else here
# means all be deleted upon completion except for the primary output summary table
keep_all_files:
    "no"

#######################################################
################# REFERENCE DATABASES #################
#######################################################
# The workflow will check the location pointed to above for the below databases, and install them
# if they are not already there. It looks for the below "TRIGGER" filenames (they 
# all end with "*_DB_SETUP") in the directory for each database, which it creates when
# it sets them up initially. If we want to point to DBs that already exist on our setup,
# we need to add these (empty) files to their respective directories. The
# workflow just checks the file is there to know it doesn't need to setup the DB.

# these should be full paths to the directories that will hold the databases

### checkm2 ###
# should change
CHECKM2_DATA_PATH:
    "/checkm2-ref-dir/"

# likely shouldn't change
CHECKM2_DB_FILENAME:
    "uniref100.KO.1.dmnd"

CHECKM2_TRIGGER_FILE:
    "CHECKM2_DB_SETUP"


### gtdb-tk ###
# should change
GTDB_DATA_PATH:
    "/GTDB-tk-ref-dir/"

# likely shouldn't change
GTDB_TRIGGER_FILE:
    "GTDBTK_DB_SETUP"


### CAT ###
# should change
DIR_HOLDING_CAT_DIR:
    "/CAT-ref-dir/"

# likely shouldn't change
CAT_DIR:
    "CAT_prepare_20210107"
CAT_DB:
    "2021-01-07_CAT_database"
CAT_TAX:
    "2021-01-07_taxonomy"
CAT_DL_FILE:
    "CAT_prepare_20210107.tar.gz"
CAT_DL_LINK:
    "https://tbb.bio.uu.nl/bastiaan/CAT_prepare/CAT_prepare_20210107.tar.gz"
CAT_COMPRESSED_NR_FAA:
    "2021-01-07.nr.gz"
CAT_TRIGGER_FILE:
    "CAT_DB_SETUP"


### eukcc ###
# should change
DIR_HOLDING_eukcc_DIR:
    "/eukcc-db-dir/"

# likely shouldn't change
eukcc_db_dir:
    "eukcc2_db_ver_1.1"
eukcc_DL_FILE:
    "eukcc2_db_ver_1.1.tar.gz"
eukcc_DL_LINK:
    "http://ftp.ebi.ac.uk/pub/databases/metagenomics/eukcc/eukcc2_db_ver_1.1.tar.gz"
eukcc_TRIGGER_FILE:
    "eukcc_DB_SETUP"

## example usage command ##
# snakemake --use-conda --conda-prefix ${CONDA_PREFIX}/envs -j 4 -p

# `--use-conda` – this specifies to use the conda environments included in the workflow
# `--conda-prefix` – this allows us to point to where the needed conda environments should be stored. Including this means if we use the workflow on a different dataset somewhere else in the future, it will re-use the same conda environments rather than make new ones. The value listed here, `${CONDA_PREFIX}/envs`, is the default location for conda environments (the variable `${CONDA_PREFIX}` will be expanded to the appropriate location on whichever system it is run on).
# `-j` – this lets us set how many jobs Snakemake should run concurrently (keep in mind that many of the thread and cpu parameters set in the config.yaml file will be multiplied by this)
# `-p` – specifies to print out each command being run to the screen

# See `snakemake -h` for more options and details.
